server:
  port: 8083

spring:
  application:
    name: notification-service
#  config:
#    import: optional:configserver:http://localhost:8888

  # MailDev Configuration (replacing Gmail)
  mail:
    host: localhost
    port: 1025
    # No username/password needed for MailDev
    properties:
      mail:
        smtp:
          auth: false  # No auth needed for MailDev
          starttls:
            enable: false  # No TLS needed

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.maxiflexy.notification_service.dto.NotificationDto
        spring.json.type.mapping: emailnotification:com.maxiflexy.notification_service.dto.NotificationDto,com.maxiflexy.transaction_service.dto.NotificationDto:com.maxiflexy.notification_service.dto.NotificationDto

# Eureka configuration
eureka:
  instance:
    hostname: localhost
    preferIpAddress: false
    instanceId: localhost:${spring.application.name}:${server.port}
    appname: ${spring.application.name}

# Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: '*'