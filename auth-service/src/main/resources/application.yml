server:
  port: 8081

spring:
  application:
    name: auth-service
#  config:
#    import: optional:configserver:http://localhost:8888

  # This is for direct configuration, but we'll use config server in production
  datasource:
    #url: jdbc:postgresql://moniebank:5434/auth_service
    url: jdbc:postgresql://moniebank:5432/moniebank
    #url: jdbc:postgresql://34.38.26.110:5432/moniebank
    username: postgres
    #username: moniebank-db
    password: password
    #password: password1234#
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  kafka:
    bootstrap-servers: kafka:9092
    #bootstrap-servers: 13.61.173.52:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: emailnotification:com.maxiflexy.auth_service.dto.EmailNotificationDto

  # Email Configuration (Gmail)
#  mail:
#    host: smtp.gmail.com
#    port: 587
#    username: ${GMAIL_USERNAME:your-email@gmail.com}
#    password: ${GMAIL_APP_PASSWORD:your-app-password}
#    properties:
#      mail:
#        smtp:
#          auth: true
#          starttls:
#            enable: true

  # Google OAuth2 Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/api/auth/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile

app:
  auth:
    tokenSecret: my_very_confidential_sectet_for_auth_application_with_sufficient_length_for_security
    tokenExpirationMsec: 864000000 # 10 days
    verification:
      token-expiry-minutes: 60 # 1 hour
  frontend:
    base-url: http://localhost:5173/

# Swagger/OpenAPI configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method


# Eureka configuration
#eureka:
#  instance:
#    hostname: localhost
#    preferIpAddress: false
#    instanceId: localhost:${spring.application.name}:${server.port}
#    appname: ${spring.application.name}

eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://eureka-service:8761/eureka/

# Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: '*'
